<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>adminer - Tag - 0xSh1v4 Blog</title><link>https://0xsh1v4.github.io/tags/adminer/</link><description>adminer - Tag - 0xSh1v4 Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Dec 2023 03:26:27 +0100</lastBuildDate><atom:link href="https://0xsh1v4.github.io/tags/adminer/" rel="self" type="application/rss+xml"/><item><title>Unveiling Hidden Dangers: An Unprotected Symfony Profiler Endpoint Leads to Critical Exposure</title><link>https://0xsh1v4.github.io/posts/symphony-stacktraces/</link><pubDate>Sun, 03 Dec 2023 03:26:27 +0100</pubDate><author>Siva Rajendran</author><guid>https://0xsh1v4.github.io/posts/symphony-stacktraces/</guid><description>Introduction In the ever-evolving landscape of web application security, the discovery of vulnerabilities can often be a race against time. Recently, I encountered a profound security oversight in an application, which served as a stark reminder of the importance of diligent security practices. This post details my journey in uncovering a critical endpoint in a web application exposed via Symfony framework.
The Discovery The application, hosted at a specific IP address (redacted for security), presented itself as a typical web application based build using symphony framework.</description></item></channel></rss>